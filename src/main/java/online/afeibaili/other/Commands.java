package online.afeibaili.other;

import online.afeibaili.FeiFeiFactory;
import online.afeibaili.bot.Bot;
import online.afeibaili.bot.ChatGPT;
import online.afeibaili.bot.Deepseek;
import online.afeibaili.bot.Kimi;

import java.util.List;

import static online.afeibaili.MessageHandler.*;

public class Commands {

    /**
     * ËÆæÁΩÆÂëΩ‰ª§
     */
    public static void setCommands() {
        COMMANDS.put("ÂºÄÂßã", param -> {
            BUFFER.delete(0, BUFFER.length());
            COMMANDS.forEach((k, v) -> BUFFER.append(k).append('\n'));
            BUFFER.deleteCharAt(BUFFER.length() - 1);
            return BUFFER.toString();
        });
        COMMANDS.put("ÈáçÁΩÆËè≤Ëè≤", param -> {
            CHATGPT.reload();
            return "ÈáçÁΩÆÂ•Ω‰∫ÜÂñµ~";
        });
        COMMANDS.put("ÈáçÁΩÆkimi", param -> {
            CHATGPT.reload();
            return "Â∑≤ÂàõÂª∫Êñ∞ÁöÑÁöÑKimi";
        });
        COMMANDS.put("ÈáçÁΩÆÂ∞èÈ≤∏È±º", param -> {
            CHATGPT.reload();
            return "Â∞èÈ≤∏È±ºüêãÂ∑≤ÈáçÁΩÆÂ•ΩÂï¶~";
        });
        COMMANDS.put("ÂºÄÂêØËÅäÂ§©", param -> {
            isAlive = true;
            return "Ëè≤Ëè≤Âá∫Áé∞‰∫ÜÂñµ~";
        });
        COMMANDS.put("ÂÖ≥Èó≠ËÅäÂ§©", param -> {
            isAlive = false;
            return "Ëè≤Ëè≤ÂÖàÈÄÄ‰∏ã‰∫ÜÂñµ~";
        });
        COMMANDS.put("ÂàáÊç¢ÊôÆÈÄöÂëΩ‰ª§Á≠âÁ∫ß", param -> {
            LEVEL = 1;
            return "ËÆæÁΩÆÁ≠âÁ∫ßÊàêÂäüÂñµ~";
        });
        COMMANDS.put("ÂàáÊç¢ÁÆ°ÁêÜÂëΩ‰ª§Á≠âÁ∫ß", param -> {
            LEVEL = 2;
            return "ËÆæÁΩÆÁ≠âÁ∫ßÊàêÂäüÂñµ~";
        });
        COMMANDS.put("Êü•ÁúãËè≤Ëè≤Ê®°Âûã", param -> CHATGPT.getModel());
        COMMANDS.put("ÂàáÊç¢Ëè≤Ëè≤Ê®°Âûã", param -> {
            if (param.length == 1) {
                return forEach(ChatGPT.MODELS);
            } else {
                return CHATGPT.setModel(param[1]);
            }
        });
        COMMANDS.put("Êü•Áúãkey", param -> CHATGPT.getKey());
        COMMANDS.put("Ëé∑ÂèñËè≤Ëè≤ËÅäÂ§©ËÆ∞ÂΩï", param -> CHATGPT.getHistory());
        COMMANDS.put("Êñ∞ËÆæÂÆö", param -> {
            if (param.length != 4) {
                return "Êñ∞ËÆæÂÆö [ÂêçÁß∞] [ËÆæÂÆöÈïøÂè•] [ chatgpt|kimi|deepseek ]";
            } else {
                switch (param[3]) {
                    case "chatgpt":
                        ChatGPT chatGPT = FeiFeiFactory.createChatGPT(param[2]);
                        bot = new Bot(chatGPT, param[1], param[2]);
                        return "ChatGPTÊ®°ÂûãËÆæÂÆöÊàêÂäüÂï¶!";
                    case "kimi":
                        Kimi kimi = FeiFeiFactory.createKimi(param[2]);
                        bot = new Bot(kimi, param[1], param[2]);
                        return "KimiÊ®°ÂûãËÆæÂÆöÊàêÂäüÂï¶!";
                    case "deepseek":
                        Deepseek deepseek = FeiFeiFactory.createDeepseek(param[2]);
                        bot = new Bot(deepseek, param[1], param[2]);
                        return "DeepseekÊ®°ÂûãËÆæÂÆöÊàêÂäüÂï¶!";
                    default:
                        return "ËØ∑ÈÄâÊã©Ê†áÁ§∫ÁöÑÊ®°Âûã";
                }
            }
        });
        COMMANDS.put("Êü•ÁúãÁæ§", param -> forEach(GROUPS));
        COMMANDS.put("Êü•Áúã‰∏ª‰∫∫", param -> forEach(MASTERS));
        COMMANDS.put("Ê∑ªÂä†Áæ§", param -> {
            BUFFER.delete(0, BUFFER.length());
            for (int i = 1; i < param.length; i++) {
                GROUPS.add(Long.parseLong(param[i]));
                BUFFER.append("Â∑≤Ê∑ªÂä†Áæ§Ôºö").append(param[i]).append('\n');
            }
            BUFFER.deleteCharAt(BUFFER.length() - 1);
            return BUFFER.toString();
        });
        COMMANDS.put("Ê∑ªÂä†‰∏ª‰∫∫", param -> {
            BUFFER.delete(0, BUFFER.length());
            for (int i = 1; i < param.length; i++) {
                MASTERS.add(Long.parseLong(param[i]));
                BUFFER.append("Â∑≤Ê∑ªÂä†‰∏ª‰∫∫Ôºö").append(param[i]).append('\n');
            }
            BUFFER.deleteCharAt(BUFFER.length() - 1);
            return BUFFER.toString();
        });
        COMMANDS.put("Âà†Èô§Áæ§", param -> {
            BUFFER.delete(0, BUFFER.length());
            for (int i = 1; i < param.length; i++) {
                long number = Long.parseLong(param[i]);
                if (number == group) {
                    BUFFER.append("‰∏çÂÖÅËÆ∏Âà†Èô§‰∏ªÁæ§Ôºö").append(param[i]).append('\n');
                    continue;
                }
                if (GROUPS.remove(number)) BUFFER.append("Â∑≤Âà†Èô§Áæ§Ôºö").append(param[i]).append('\n');
            }
            BUFFER.deleteCharAt(BUFFER.length() - 1);
            return BUFFER.toString();
        });
        COMMANDS.put("Âà†Èô§‰∏ª‰∫∫", param -> {
            BUFFER.delete(0, BUFFER.length());
            for (int i = 1; i < param.length; i++) {
                long number = Long.parseLong(param[i]);
                if (number == master) {
                    BUFFER.append("‰∏çÂÖÅËÆ∏Âà†Èô§‰∏ª‰∫∫Ôºö").append(param[i]).append('\n');
                    continue;
                }
                if (MASTERS.remove(number)) BUFFER.append("Â∑≤Âà†Èô§‰∏ª‰∫∫Ôºö").append(param[i]).append('\n');
            }
            BUFFER.deleteCharAt(BUFFER.length() - 1);
            return BUFFER.toString();
        });

    }

    /**
     * Áî®‰∫éÂ∞Ü‰∏Ä‰∏™ÂàóË°®ÂÅöÊàê‰∏Ä‰∏™Ê∂àÊÅØ
     *
     * @param list ÂàóË°®
     * @param <T>  ÂàóË°®Ê≥õÂûã
     * @return ‰∏Ä‰∏™Ê∂àÊÅØ
     */
    public static <T> String forEach(List<T> list) {
        BUFFER.delete(0, BUFFER.length());
        list.forEach(value -> BUFFER.append(value).append("\n"));
        BUFFER.deleteCharAt(BUFFER.length() - 1);
        return BUFFER.toString();
    }

}
